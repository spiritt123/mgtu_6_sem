% === Зададим матрицы и решения для оценки метода Гауса ===
A1 = [
    -62.8000        -6.9700         7.7300         0.0000;
      0.0000        49.4000        -3.5600        -4.5700;
     -7.1100        -5.9700        97.6000        -7.5800;
      6.8100        -1.2900        -7.9500        42.2000
];
F1 = [-221.3100; -523.8800; 1121.6300; 294.6700];
D1 = [6; -9; 12; 8];

A2 = [
   -363.9420       -21.3080      4463.8320       738.5280;
    -78.2070        -4.5710       959.2470       158.6970;
     -0.0720         0.0000         0.8860         0.1440;
   -181.5380       -10.6540      2226.5880       368.3980
];
F2 = [175.2200; 37.9700; 0.1880; 86.4800];
D2 = [10; 32; 2; -6];

% === Напишем функцию по методу Гауса ===
function Gs = Gauss(A,F)
    [imax, jmax] = size(A);
    AF = [A F];
% Приведение матрицы к треугольной методом Гаусса
% AF = rref([AF])
    for j = 1:jmax
% Нормализация
        AF(j, :) = AF(j, :) / AF(j, j);
        for i = [1:j-1 j+1:imax]
            AF(i, :) = AF(i, :)- (AF(j, :) *
            AF(i, j)); 
        end
    end

    disp('Решение СЛАУ методом Гаусса:')
    X = AF(:, 5:1:end);
    disp(X);
    Gs = X;
end

function [Gs] = Gauss2(A)
    N = size(A, 1);
    E = eye(N);
    Gs = Gauss(A, E);
end

% === Вычисление значений ===
disp('Решение СЛАУ 1 реализованным методом:');
X1 = Gauss(A1,F1);

disp('Решение СЛАУ 2 реализованным методом:');
X2 = Gauss(A2,F2);

disp(' ');
disp('Решение СЛАУ 1 встроенным методом:');
X11 = A1 \ F1 ;
disp(X11);

disp('Решение СЛАУ 2 встроенным методом:');
X22 = A2 \ F2 ;
disp(X22);
disp(' ');

R1 = F1 - A1*X1;
disp('Невязка первой матрицы: ');
disp(R1);

R2 = F2 - A2*X2;
disp('Невязка второй матрицы: ');
disp(R2);
disp(' ')

disp('Нормы невязки СЛАУ 1:');
norm1_1 = norm(R1, 1)
norm1_inf = norm(R1', inf)
disp(' ');

disp('Нормы невязки СЛАУ 2:');
norm2_1 = norm(R2, 1)
norm2_inf = norm(R2, inf)

disp(' ')
disp('Абсолютные и относительные погрешности решений СЛАУ1')

%Абсолютная погрешность по единочной норме
abs_norm1_1 = norm(D1-X1,1)

%Абсолютная погрешность по бесконечной норме
abs_norm1_inf = norm(D1-X1,inf)

%Относительная погрешность по единочной норме
delta_norm1_1 = norm(D1-X1,1)/norm(D1,1)

%Относительная погрешность по бесконечной норме
delta_norm1_inf = norm(D1-X1,inf)/norm(D1,inf)
disp(' ')
disp('Абсолютные и относительные погрешности решений СЛАУ2')

%Абсолютная погрешность по единочной норме
abs_norm2_1 = norm(D2-X2,1)

%Абсолютная погрешность по бесконечной норме
abs_norm2_inf = norm(D2-X2,inf)

%Относительная погрешность по единочной норме
delta_norm2_1 = norm(D2-X2,1)/norm(D2,1)

%Относительная погрешность по бесконечной норме
delta_norm2_inf = norm(D2-X2,inf)/norm(D2,inf)
format bank
disp(' ')
disp('A1^-1: ');

A1_1 = Gauss2(A1);
disp('A1^-1 * A1:');
disp(A1*A1_1);
disp(' ')
disp('A2^-1: ');

A2_1 = Gauss2(A2);
disp('A2^-1 * A2:');
disp(A2*A2_1);
format short

disp(' ')
disp('Числа обусловленности СЛАУ 1:');

cond1_1 = cond(A1,1);
fprintf('Число обусловленности, с помощью единичной нормы: %6.3f \n',cond1_1);

cond1_inf = cond(A1,inf);
fprintf('Число обусловленности, с помощью бесконечной нормы: %6.3f \n',cond1_inf);

disp(' ')
fprintf('Числа обусловленности СЛАУ 2: \n');

cond2_1 = cond(A2, 1) ;
fprintf('Число обусловленности, с помощью единичной нормы: %6.3f \n',cond2_1);

cond2_inf = cond(A2, inf);
fprintf('Число обусловленности, с помощью бесконечной нормы: %6.3f \n',cond2_inf);
